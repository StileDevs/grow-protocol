name: CI Pipeline

on:
  push:
    branches:
      - main
    tags-ignore:
      - "**"
    paths-ignore:
      - "**/*.md"
      - LICENSE
      - "**/*.gitignore"
      - .editorconfig
      - docs/**
  pull_request: null

env:
  NODE_VERSION: 20
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"

      - name: Install Dependencies
        run: pnpm i --frozen-lockfile --ignore-scripts

      - name: Build
        run: pnpm run build

      - name: Run Tests
        run: pnpm run test

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          if-no-files-found: error

  publish:
    needs: build-and-test
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to NPM
        run: |
          if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$"; then
            pnpm publish --access public --no-git-checks
          elif git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+"; then
            pnpm publish --tag next --access public --no-git-checks
          else
            echo "Not a release, skipping publish"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: publish
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Zip dist directory
        run: |
          VERSION=$(git log -1 --pretty=%B)
          zip -r "growItems-v${VERSION}.zip" dist/

      - name: Create Release
        id: create_release
        run: |
          VERSION=$(git log -1 --pretty=%B)
          if echo "$VERSION" | grep -qE "^[0-9]+\.[0-9]+\.[0-9]+$"; then
            gh release create "$VERSION" \
              --title "$VERSION" \
              --notes "Release version $VERSION" \
              --target ${{ github.sha }} \
              "growItems-v${VERSION}.zip"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
